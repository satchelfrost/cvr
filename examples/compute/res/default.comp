#version 450

struct Particle {
	vec2 position;
	vec2 velocity;
    vec4 color;
};

layout (binding = 0) uniform ParameterUBO {
    float deltaTime;
} ubo;

layout(std140, binding = 1) buffer ParticleSSBOIn {
   Particle particles[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() 
{
    uint index = gl_GlobalInvocationID.x;  

    Particle particle = particles[index];
    float dt = ubo.deltaTime;
    particles[index].velocity = particle.velocity;
    particles[index].velocity.y += 0.0005 * dt;

    float nx = particle.position.x + particles[index].velocity.x * dt;
    if (nx < -1.0 || nx > 1.0) {
        particles[index].velocity.x *= -0.9;
    } else {
        particles[index].position.x = nx;
    }
    float ny = particle.position.y + particles[index].velocity.y * dt;
    if (ny < -1.0 || ny > 1.0) {
        particles[index].velocity.y *= -0.9;
    } else {
        particles[index].position.y = ny;
    }
}
